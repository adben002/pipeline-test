AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  SourceStorageBucketName:
    Type: String
  DomainName:
    Type: String
    Description: The base domain name for the web site (no 'www')

Resources:

  # Role for CodePipeline
  CodePipelineRoleqwq:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AccessPipelineBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${SourceStorageBucketName}'
              - Effect: Allow
                Action: s3:*
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${SourceStorageBucketName}/*'
        - PolicyName: CloudformationPipelineDeployment
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                Resource: !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/asdsadasdsad-codepipeline/*'
        - PolicyName: RunBuild
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: !Sub 'arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AWS::StackName}-LambdaBuilder'
        - PolicyName: RunBuild2
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: !Sub 'arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AWS::StackName}-SiteSourceBuilder'
        - PolicyName: PassOntoSiteRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: iam:PassRole
                Resource: !GetAtt SitePipeLineRoleasd.Arn
        - PolicyName: LambdaCodeBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource: !Sub 'arn:${AWS::Partition}:s3:::*/*'

  SitePipeLineRoleasd:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [cloudformation.amazonaws.com]
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/SystemAdministrator

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BuildLog
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-LambdaBuilder:log-stream:*'
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
        - PolicyName: AccessPipelineBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${SourceStorageBucketName}'
              - Effect: Allow
                Action: s3:*
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${SourceStorageBucketName}/*'

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
      Name: !Sub "${AWS::StackName}-LambdaBuilder"
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2

          phases:
            build:
              commands:
                - cd certificateValidator/
                - zip certificateValidator.zip *

          artifacts:
            files:
              - certificateValidator/certificateValidator.zip
            discard-paths: yes


  CodeBuildRole2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BuildLog
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-SiteSourceBuilder:log-stream:*'
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
        - PolicyName: AccessPipelineBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${SourceStorageBucketName}'
              - Effect: Allow
                Action: s3:*
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${SourceStorageBucketName}/*'

  CodeBuild2:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
      Name: !Sub "${AWS::StackName}-SiteSourceBuilder"
      ServiceRole: !Ref CodeBuildRole2
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 12
              commands:
                - cd ui/
                - npm ci
            build:
              commands:
                - npm run build

          artifacts:
            files:
              - '**/*'
            base-directory: 'ui/build'

  SourceCodePipelineCloudformationDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt CodePipelineRoleqwq.Arn
            Action: sts:AssumeRole
      Policies:
        - PolicyName: SourceCodePipelineCloudformationDeploymentPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                Resource: !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}-static-website/*'
        - PolicyName: SourceCodePipelineCloudformationPassOntoStackPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: iam:PassRole
                Resource: !GetAtt StackDeploymentRole.Arn
        - PolicyName: AccessPipelineBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${SourceStorageBucketName}'
              - Effect: Allow
                Action: s3:*
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${SourceStorageBucketName}/*'

  StackDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # Pipeline for running source
  CodePipelineasdas:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: 'sadifojsaiodfjiosdjf-repo-codepipeline'
      RoleArn: !GetAtt CodePipelineRoleqwq.Arn
      ArtifactStore:
        Type: S3
        Location: !Sub '${SourceStorageBucketName}'
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                S3Bucket: !Sub '${SourceStorageBucketName}'
                S3ObjectKey: source-code
              OutputArtifacts:
                - Name: RepoSourceasdasdas
              RunOrder: 1
        - Name: DeployLambda
          Actions:
            - Name: DeployPipeline
              InputArtifacts:
                - Name: RepoSourceasdasdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: 'asdsadasdsad-codepipeline'
                TemplatePath: RepoSourceasdasdas::lambda-bucket.yaml
                RoleArn: !GetAtt SitePipeLineRoleasd.Arn
              RunOrder: 1
            - Name: CodeBuild
              InputArtifacts:
                - Name: RepoSourceasdasdas
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: sadsadsadsadsadsdretertr
              Configuration:
                ProjectName: !Ref CodeBuild
              RunOrder: 1
            - Name: CopyLambda
              InputArtifacts:
                - Name: sadsadsadsadsadsdretertr
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !ImportValue LambdaCodeBucket
                Extract: true
                ObjectKey: certificate-validator
              RunOrder: 2
            - Name: DeployStackPipeline
              InputArtifacts:
                - Name: RepoSourceasdasdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub '${AWS::StackName}-static-website'
                TemplatePath: RepoSourceasdasdas::staticwebsite.yaml
                ParameterOverrides: !Join
                  - ''
                  - - '{'

                    - '"DomainName": "'
                    - !Ref DomainName
                    - '"'

                    - '}'
                RoleArn: !GetAtt StackDeploymentRole.Arn
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              RoleArn: !GetAtt SourceCodePipelineCloudformationDeploymentRole.Arn
              RunOrder: 3
            - Name: CodeBuild2
              InputArtifacts:
                - Name: RepoSourceasdasdas
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: oiuoiuwerioewhrioweroiwejrioerwe
              Configuration:
                ProjectName: !Ref CodeBuild2
              RunOrder: 4
            - Name: CopySite
              InputArtifacts:
                - Name: oiuoiuwerioewhrioweroiwejrioerwe
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref DomainName
                Extract: true
              RunOrder: 5
