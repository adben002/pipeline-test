AWSTemplateFormatVersion: 2010-09-09

Parameters:
  # Domain: example-com
  ProjectName:
    Description: The project name
    Type: String
    MinLength: 4
    MaxLength: 253
    AllowedPattern: '[a-z0-9]+[-.a-z0-9]*'
    ConstraintDescription: |
      Provide a valid project name using only lowercase letters,
      numbers, and dash (-).
  GitHubOwner:
    Description: GitHub account username.
    Type: String
  GitHubRepo:
    Description: Static site repo name.
    Type: String
  GitHubBranch:
    Description: The branch that will trigger build/deploy.
    Type: String
    Default: master
  GitHubOAuthToken:
    Description: OAuth or personal access token.
    Type: String
    NoEcho: true

Resources:

  # Bucket for CodePipeline artifact storage: codepipeline.example.com
  CodePipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-codepipeline-artifact-store
      VersioningConfiguration:
        Status: Enabled
    DeletionPolicy: Delete

  # Role for CodePipeline
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AccessPipelineBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource: !Sub ${CodePipelineBucket.Arn}/*
        - PolicyName: CloudformationPipelineDeployment
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ProjectName}-codepipeline/*
        - PolicyName: PassOntoSiteRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: iam:PassRole
                Resource: !GetAtt SitePipeLineRole.Arn

  SitePipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [cloudformation.amazonaws.com]
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # Pipeline for running source
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ProjectName}-repo-codepipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: RepoSource
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployPipeline
              InputArtifacts:
                - Name: RepoSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub ${ProjectName}-codepipeline
                TemplatePath: RepoSource::pipeline.yaml
                RoleArn: !GetAtt SitePipeLineRole.Arn
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
